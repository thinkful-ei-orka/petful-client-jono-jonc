{"version":3,"sources":["config.js","UserContext.js","cat/Cat.js","dog/Dog.js","form/Form.js","adoption/AdoptionLine.js","home/Home.js","petService.js","root/Root.js","index.js"],"names":["process","React","createContext","userName","isLoading","people","canAdopt","Cat","componentDidMount","context","getPet","console","log","componentWillUnmount","clearTimeout","timerId","this","isCatAdopted","className","src","pets","cat","imageURL","alt","name","gender","age","breed","story","isNextInline","onClick","handleCatAdoptButton","Component","contextType","UserContext","Dog","state","dog","isAdopted","isDogAdopted","handleDogAdoptButton","Form","props","useContext","postPersonToLine","newUser","userString","JSON","stringify","fetch","config","method","headers","body","catch","error","onSubmit","e","event","preventDefault","target","value","setContext","isInline","addToList","htmlFor","type","required","getRandNum","Math","floor","random","AdoptionList","listProcess","timerId1","setInterval","timerId2","removePerson","clearTimers","clearInterval","timerId3","randomAdoption","then","getPeople","num","res","json","data","map","person","key","Home","history","push","Root","blank","setState","getPetHandler","petService","removeMe","adoptDogButtonHandler","setTimeout","adoptCatButtonHandler","adoptBothButtonHandler","adoptButtonHandler","removePeople","Provider","to","path","component","exact","render","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2cfdfa55.chunk.js","sourcesContent":["export default {\r\n    REACT_APP_API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:9000/'\r\n};","import React from 'react';\r\n\r\nexport default React.createContext({\r\n  userName: '',\r\n  isLoading: true,\r\n  people: [],\r\n  canAdopt: false,\r\n});\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport UserContext from '../UserContext';\r\n\r\nclass Cat extends React.Component {\r\n  static contextType = UserContext;\r\n  componentDidMount = () => {\r\n    this.context.getPet();\r\n    console.log(this.context);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    clearTimeout(this.context.timerId);\r\n  };\r\n\r\n  // getCat = () => {\r\n  //   fetch(`${config.REACT_APP_API_ENDPOINT}/pets`)\r\n  //     .then((res) => {\r\n  //       if (!res.ok) {\r\n  //         return res.json().then((e) => Promise.reject(e));\r\n  //       }\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((resJson) => {\r\n  //       this.setState({\r\n  //         cat: resJson.cat,\r\n  //         isLoading: false,\r\n  //         isAdopted: false,\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error({ error });\r\n  //     });\r\n  // };\r\n\r\n  // handleAdoptButton = () => {\r\n  //   fetch(`${config.REACT_APP_API_ENDPOINT}/pets/cat`, {\r\n  //     method: 'DELETE',\r\n  //   })\r\n  //     .then(() => {\r\n  //       this.setState({\r\n  //         isAdopted: true,\r\n  //       });\r\n  //       this.timerId = setTimeout(() => {\r\n  //         this.getCat();\r\n  //       }, 2000);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error({ error });\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    if (this.context.isLoading) {\r\n      return <div>Loading</div>;\r\n    }\r\n    if (this.context.isCatAdopted) {\r\n      return (\r\n        <div className='cat-display is-adpoted'>\r\n          <h1>Was Adopted</h1>\r\n          <p>New cat incoming</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className='cat-display'>\r\n        <h2>Cat</h2>\r\n        <img src={this.context.pets.cat.imageURL} alt='Cat' />\r\n        <p>\r\n          <strong>Name:</strong> {this.context.pets.cat.name}\r\n        </p>\r\n        <p>\r\n          <strong>Gender:</strong> {this.context.pets.cat.gender}\r\n        </p>\r\n        <p>\r\n          <strong>Age:</strong> {this.context.pets.cat.age} yrs\r\n        </p>\r\n        <p>\r\n          <strong>Breed:</strong> {this.context.pets.cat.breed}\r\n        </p>\r\n        <p>\r\n          <strong>Fluffy's story:</strong> {this.context.pets.cat.story}\r\n        </p>\r\n        <button\r\n          className={this.context.isNextInline ? '' : 'hidden'}\r\n          onClick={this.context.handleCatAdoptButton}>\r\n          Adopt\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cat;\r\n","import React from 'react';\r\nimport config from '../config';\r\nimport UserContext from '../UserContext';\r\n\r\nclass Dog extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    dog: null,\r\n    isLoading: true,\r\n    isAdopted: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // this.getDog();\r\n    this.context.getPet();\r\n    console.log(this.context);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    clearTimeout(this.context.timerId);\r\n  };\r\n\r\n  // getDog = () => {\r\n  //   fetch(`${config.REACT_APP_API_ENDPOINT}/pets`)\r\n  //     .then((res) => {\r\n  //       if (!res.ok) {\r\n  //         return res.json().then((e) => Promise.reject(e));\r\n  //       }\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((resJson) => {\r\n  //       this.setState({\r\n  //         dog: resJson.dog,\r\n  //         isLoading: false,\r\n  //         isAdopted: false,\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error({ error });\r\n  //     });\r\n  // };\r\n\r\n  // handleAdoptButton = () => {\r\n  //   fetch(`${config.REACT_APP_API_ENDPOINT}/pets/dog`, {\r\n  //     method: 'DELETE',\r\n  //   })\r\n  //     .then(() => {\r\n  //       this.context.setContext({\r\n  //         isDogAdopted: true,\r\n  //       });\r\n  //       this.timerId = setTimeout(() => {\r\n  //         this.context.getPet();\r\n  //       }, 2000);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error({ error });\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    if (this.context.isLoading) {\r\n      return <div></div>;\r\n    }\r\n    if (this.context.isDogAdopted) {\r\n      return (\r\n        <div className='dog-display is-adpoted'>\r\n          <h1>Was Adopted</h1>\r\n          <p>New dog incoming</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className='dog-display'>\r\n        <h2>Dog</h2>\r\n        <img src={this.context.pets.dog.imageURL} alt='Dog' />\r\n        <p>\r\n          <strong>Name:</strong> {this.context.pets.dog.name}{' '}\r\n        </p>\r\n        <p>\r\n          <strong>Gender:</strong> {this.context.pets.dog.gender}{' '}\r\n        </p>\r\n        <p>\r\n          <strong>Age:</strong> {this.context.pets.dog.age} yrs\r\n        </p>\r\n        <p>\r\n          <strong>Breed:</strong> {this.context.pets.dog.breed}{' '}\r\n        </p>\r\n        <p>\r\n          <strong>Fluffy's story:</strong> {this.context.pets.dog.story}{' '}\r\n        </p>\r\n        <button\r\n          className={this.context.isNextInline ? '' : 'hidden'}\r\n          onClick={this.context.handleDogAdoptButton}>\r\n          Adopt\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dog;\r\n","import React, { useContext } from 'react';\r\nimport config from '../config';\r\nimport UserContext from '../UserContext';\r\n\r\nfunction Form(props) {\r\n  const context = useContext(UserContext);\r\n\r\n  const addToList = (event) => {\r\n    event.preventDefault();\r\n\r\n    const name = event.target.userName.value;\r\n    event.target.userName.value = '';\r\n    //   this.setState({ userName: name, isInline: true });\r\n    context.setContext({ userName: name, isInline: true });\r\n    postPersonToLine(name);\r\n  };\r\n\r\n  const postPersonToLine = (name) => {\r\n    const newUser = {\r\n      name: name,\r\n    };\r\n    const userString = JSON.stringify(newUser);\r\n    fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: userString,\r\n    }).catch((error) => {\r\n      console.error({ error });\r\n    });\r\n  };\r\n\r\n  console.log(context.userName);\r\n  return (\r\n    //   <UserContext.Provider\r\n    //     value={{\r\n    //       ...this.state,\r\n    //     }}>\r\n    <>\r\n      {/* <div className='adoption-line'>\r\n          <AdoptionList />\r\n        </div> */}\r\n      <form className='add-person-form' onSubmit={(e) => addToList(e)}>\r\n        <label htmlFor='userName'>Your Name:</label>\r\n        <input type='text' name='userName' required />\r\n        <button type='submit'>Get in Line</button>\r\n      </form>\r\n    </>\r\n    //   </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\nimport config from '../config';\nimport UserContext from '../UserContext';\nimport Form from '../form/Form';\n\nfunction getRandNum() {\n  return Math.floor(Math.random() * 2);\n}\n\nexport default class AdoptionList extends React.Component {\n  static contextType = UserContext;\n\n  listProcess = () => {\n    // if (this.context.isInline == false) {\n    //   return;\n    // }\n    if (this.context.isNextInline == false) {\n      this.timerId1 = setInterval(() => this.postPersonToLine(), 5000);\n      this.timerId2 = setInterval(() => this.removePerson(), 5000);\n    }\n\n    // this.timerId3 = setInterval(() => this.getPeople(), 2000);\n  };\n\n  componentDidMount() {\n    this.listProcess();\n  }\n\n  clearTimers = () => {\n    clearInterval(this.timerId1);\n    clearInterval(this.timerId2);\n    clearInterval(this.timerId3);\n  };\n\n  // componentDidMount() {\n  //   if (this.context.isInline) {\n  //     this.listProcess();\n  //   }\n  // }\n\n  // componentDidUpdate() {\n  //   this.listProcess();\n  // }\n  componentWillUnmount = () => {\n    this.clearTimers();\n    console.log(`component unmounted`);\n  };\n\n  randomAdoption = () => {\n    let num = getRandNum();\n    if (getRandNum() == 1) {\n      this.context.handleDogAdoptButton();\n      console.log(getRandNum());\n    } else {\n      this.context.handleCatAdoptButton();\n      console.log(getRandNum());\n    }\n  };\n\n  removePerson = () => {\n    // if (this.state.people < 1) {\n    //   clearInterval(this.timerId);\n    //   console.log(`component unmounted`);\n    // }\n    return (\n      fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n        method: 'DELETE',\n      })\n        // .then(() => {\n        //   if (data[0] !== this.context.userName) {\n        //     this.randomAdoption();\n        //   }\n        // })\n        .then(() => {\n          if (this.context.isNextInline == false && !this.timerId1) {\n            this.listProcess();\n          }\n          this.randomAdoption();\n          this.getPeople();\n        })\n    );\n\n    //   .then(() => {\n    //   this.context.setContext({ isLoading: false });\n    //   // this.getPeople()\n    // });\n  };\n\n  postPersonToLine = () => {\n    let num = Math.floor(Math.random() * 50);\n    const newUser = {\n      name: `Test${num}`,\n    };\n    const userString = JSON.stringify(newUser);\n    fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: userString,\n    }).catch((error) => {\n      console.error({ error });\n    });\n  };\n\n  getPeople = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/people`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        if (data[0] === this.context.userName) {\n          this.clearTimers();\n          this.context.setContext({ isNextInline: true });\n        }\n        this.context.setContext({\n          people: data,\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    console.log(this.context.userName);\n\n    console.log(this.context.people);\n    if (this.context.isLoading) {\n      return <div>loading...</div>;\n    }\n\n    // while (this.state.people) {\n    //   if (this.state.people <= 0) {\n    //     clearTimeout(this.timerId);\n    //   }\n    //   this.timerId = setTimeout(() => {\n    //     this.removePerson();\n    //   }, 2000);\n    // }\n\n    // this.timerId = setInterval(() => {\n    //   if (!this.state.people) {\n    //     clearInterval(this.timerId);\n    //   }\n    //   this.removePerson();\n    // }, 2000);\n    return (\n      <>\n        <ol>\n          {this.context.people.map((person) => (\n            <li key={person}>{person}</li>\n          ))}\n        </ol>\n        <Form />\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Root from '../root/Root';\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className='home-page'>\r\n      <p className='welcome-message'>\r\n        {' '}\r\n        Welcome to Petful! Our adoption process is a bit different. As you move\r\n        to the adoption page and submit your name you will be added to the back\r\n        of the line. You will see one dog and one cat on the screen. As a pet\r\n        gets adopted they will be removed from the screen and replaced with a\r\n        new one. At this point you will be moved forward in the line. Once you\r\n        reach the front of the line it is your turn to adopt! You will have the\r\n        option to adopt either animal you see or both!\r\n      </p>\r\n      <div className='image-container'></div>\r\n      <button\r\n        className='get-started-button'\r\n        onClick={() => {\r\n          props.history.push('/adoption');\r\n        }}>\r\n        Get Started!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import config from './config';\n\nconst getPetService = () => {\n  return fetch(`${config.REACT_APP_API_ENDPOINT}/pets`).then((pets) => {\n    return pets.json();\n  });\n};\n// adoptButtonService = () => {\n//   fetch(`${config.REACT_APP_API_ENDPOINT}/pets/dog`, {\n//     method: 'DELETE',\n//   })\n//     .then(() => {\n//       this.context.setContext({\n//         isDogAdopted: true,\n//       });\n//       this.timerId = setTimeout(() => {\n//         this.context.getPet();\n//       }, 2000);\n//     })\n//     .catch((error) => {\n//       console.error({ error });\n//     });\n// };\nexport default { getPetService };\n","import React from 'react';\nimport { withRouter, Route, Link } from 'react-router-dom';\nimport Cat from '../cat/Cat';\nimport Dog from '../dog/Dog';\nimport AdoptionList from '../adoption/AdoptionLine';\nimport Home from '../home/Home';\nimport Form from '../form/Form';\nimport UserContext from '../UserContext';\nimport petService from '../petService';\nimport config from '../config';\nimport peopleService from '../peopleService';\n\nclass Root extends React.Component {\n  state = {\n    isLoading: true,\n    people: [],\n    userName: '',\n    pets: [],\n    isInline: false,\n    isNextInline: false,\n    isDogAdopted: false,\n    isCatAdopted: false,\n  };\n\n  setContext = (blank) => {\n    this.setState(blank);\n  };\n\n  getPetHandler = () => {\n    petService.getPetService().then((pets) => {\n      this.setContext({\n        pets,\n        isLoading: false,\n        isDogAdopted: false,\n        isCatAdopted: false,\n      });\n    });\n  };\n  getPeople = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/people`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        if (data[0] === this.context.userName) {\n          this.clearTimers();\n          this.setContext({ isNextInline: true });\n        }\n        this.setContext({\n          people: data,\n          isLoading: false,\n          isNextInline: false,\n        });\n      });\n  };\n  removeMe = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n      method: 'DELETE',\n    });\n  };\n  //TODO: figureout how to remove me and refresh page after adopt button clicked. could just make specific function for the button vs random\n  // removePeople = () => {\n  //   return fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n  //     method: 'DELETE',\n  //   }).then(() => this.getPeople());\n  // };\n  // postPersonToLine = () => {\n  //   let num = Math.floor(Math.random() * 50);\n  //   const newUser = {\n  //     name: `Test${num}`,\n  //   };\n  //   const userString = JSON.stringify(newUser);\n  //   fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'content-type': 'application/json',\n  //     },\n  //     body: userString,\n  //   }).catch((error) => {\n  //     console.error({ error });\n  //   });\n  // };\n  adoptDogButtonHandler = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/pets/dog`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        this.setContext({\n          isDogAdopted: true,\n        });\n        this.timerId = setTimeout(() => {\n          this.getPetHandler();\n        }, 2000);\n        if (this.state.isNextInline == true) {\n          this.removeMe().then(() => this.getPeople());\n        }\n      })\n\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n  adoptCatButtonHandler = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/pets/cat`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        this.setContext({\n          isCatAdopted: true,\n          // isNextInline: false,\n        });\n        this.timerId = setTimeout(() => {\n          this.getPetHandler();\n        }, 2000);\n        if (this.state.isNextInline == true) {\n          this.removeMe().then(() => this.getPeople());\n        }\n      })\n\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n\n  adoptBothButtonHandler = () => {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/pets/both`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        this.setContext({\n          isCatAdopted: true,\n          isDogAdopted: true,\n          // isNextInline: false,\n        });\n        this.timerId = setTimeout(() => {\n          this.getPetHandler();\n        }, 2000);\n        if (this.state.isNextInline == true) {\n          this.removeMe().then(() => this.getPeople());\n        }\n      })\n\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n\n  // adoptButtonHandler = (type) => {\n  //   petService.adoptButtonHandler(type);\n  // };\n\n  render() {\n    const value = {\n      ...this.state,\n      getPet: this.getPetHandler,\n      adoptButtonHandler: this.adoptButtonHandler,\n      setContext: this.setContext,\n      handleDogAdoptButton: this.adoptDogButtonHandler,\n      handleCatAdoptButton: this.adoptCatButtonHandler,\n      removePeople: this.removePeople,\n      postPersonToLine: this.postPersonToLine,\n    };\n    return (\n      <UserContext.Provider value={value}>\n        <div>\n          <Link to='/' className='home-link'>\n            <h1>Petful</h1>\n          </Link>\n          <Route path='/' component={Home} exact />\n          <Route\n            path='/adoption'\n            render={() => {\n              return (\n                <div>\n                  <div className='adoption-line'>\n                    <AdoptionList />\n                  </div>\n                  {/* <Form /> */}\n                  <div className='adoption'>\n                    <Cat />\n                    <Dog />\n                  </div>\n                  <div className={this.state.isNextInline ? '' : 'hidden'}>\n                    <h2 className={'adopt-both'}>Be a hero, adopt both!</h2>\n                    <button\n                      className={'adopt-both-button'}\n                      onClick={() => this.adoptBothButtonHandler()}>\n                      Adopt Both\n                    </button>\n                  </div>\n                </div>\n              );\n            }}\n          />\n        </div>\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(Root);\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root/Root';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <Root />\n    </BrowserRouter>\n    , \n    document.getElementById('root')\n);"],"sourceRoot":""}